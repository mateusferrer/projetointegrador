package sistema.visao.entidade;import java.util.ArrayList;import java.util.List;import javax.faces.model.SelectItem;import javax.inject.Inject;import javax.inject.Named;import org.springframework.context.annotation.Scope;import sistema.infra.formularios.GListaDetalheFrm;import sistema.negocio.aplicacao.entidade.EntidadeBean;import sistema.negocio.dominio.entidade.Entidade;import sistema.negocio.enums.TipoEntidade;import sistema.negocio.enums.UF;import com.forj.cirrus.infra.exceptions.NegocioException;import com.forj.cirrus.infra.spring.Escopo;import com.forj.cirrus.util.WebUtils;/** * Gerenciador de formulários GUI JSF de manutenção de <b>Entidade</b>. *  * @version 1.0 - 26/05/2016 * @since 16/05/2016 */@Named@Scope(Escopo.SESSION)public class EntidadeFrm extends GListaDetalheFrm<Entidade> {	/** Listagem do combo de seleção do status. **/	private List<SelectItem> cmboTipoIgreja;	/** Armazena o gerenciador dos processos de negócio. **/	@Inject	private EntidadeBean bean;	private Entidade entidade;	/** Armazena o nome da entidade para filtragem. **/	private String nomeEntidade;	/** Construtor padrão. **/	public EntidadeFrm() {		titulo = "Manutenção de Entidades";		dominio = new Entidade();	}	/** Preenche a combo de tipos de igreja. */	private void preencherCmboTipoIgreja() {		cmboTipoIgreja = new ArrayList<>();		cmboTipoIgreja.add(new SelectItem(TipoEntidade.M, TipoEntidade				.getInstance(TipoEntidade.M)));		cmboTipoIgreja.add(new SelectItem(TipoEntidade.F, TipoEntidade				.getInstance(TipoEntidade.F)));	}	/** Preenche a combo de UF. */	public UF[] getUFs() {		return UF.values();	}	/** {@inheritDoc} */	@Override	public void pesquisar() {		try {			colecao = bean.get(nomeEntidade);		} catch (NegocioException e) {			gerarErrosRia(e);		}	}	/** {Descrita resumida do método}. */	public void salvar() {		String usuario = WebUtils.getSession().getAttribute("usuario")				.toString();		try {			if (alterar) {				entidade = (Entidade) dominio;				entidade.setUsuario(usuario);				bean.alterar(entidade);				alterar = false;				atualizarLista(entidade);				entidade.limpar();			} else {				bean.inserir(entidade);				entidade.limpar();				gerarMensagemRia("Cadastro realizado com sucesso.");			}		} catch (NegocioException e) {			gerarErrosRia(e);		}	}	/** {@inheritDoc} */	@Override	public String novo() {		preencherCmboTipoIgreja();		return super.novo();	}	public List<SelectItem> getCmboTipoIgreja() {		return cmboTipoIgreja;	}	public String getNomeEntidade() {		return nomeEntidade;	}	public void setNomeEntidade(String nomeEntidade) {		this.nomeEntidade = nomeEntidade;	}	public Entidade getEntidade() {		return entidade;	}	public void setEntidade(Entidade entidade) {		this.entidade = entidade;	}}